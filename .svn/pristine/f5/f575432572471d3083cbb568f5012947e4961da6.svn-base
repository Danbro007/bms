import json
import os
from django.shortcuts import render
from .models import *
from django.http import HttpResponse, JsonResponse
from django.db import transaction
from wechat.settings import UPLOADFILES_DIR


# Create your views here.
def WechatList(req):
    return render(req, "wechat/wechat-list.html")


def WechatData(req):
    page = int(req.GET.get("page"))
    limit = int(req.GET.get("limit"))
    keyword = req.GET.get("keyword")
    if keyword:
        count = ReplyMsg.objects.filter(keyword__contains=keyword).all().count()
        reply_msg_list = ReplyMsg.objects.filter(keyword__contains=keyword)[(page - 1) * limit:page * limit]
    else:
        count = ReplyMsg.objects.all().count()
        reply_msg_list = ReplyMsg.objects.all()[(page - 1) * limit:page * limit]
    reply_msg_data = []
    for reply_msg in reply_msg_list:
        reply_info = {
            "id": reply_msg.id,
            "keyword": reply_msg.keyword,
        }
        if reply_msg.type == 1:
            reply_info["reply"] = reply_msg.msg
        else:
            reply_info["reply"] = reply_msg.file.url.rsplit("/", 1)[1]
        reply_msg_data.append(reply_info)
    Replay_list = {"data": reply_msg_data, "msg": "", "code": 0, "count": count}
    rdata = json.dumps(Replay_list)
    return HttpResponse(rdata, content_type="application/json", )


def WechatAdd(req):
    if req.method == "GET":
        reply = ReplyMsg
        chatrooms = Chatroom.objects.all()
        return render(req, "wechat/wechat-add.html", locals())
    else:
        response = {"code": 200, "msg": "回复语句添加成功"}
        keyword = req.POST.get("keyword")
        msg = req.POST.get("msg")
        type = req.POST.get("type")
        file = os.path.join(UPLOADFILES_DIR, req.POST.get("file_path"))
        if ReplyMsg.objects.filter(keyword=keyword):
            response["code"] = 400
            response["msg"] = "关键词已存在"
        else:
            try:
                with transaction.atomic():
                    if type == "1":
                        ReplyMsg.objects.create(keyword=keyword, msg=msg, type=type)
                    else:
                        ReplyMsg.objects.create(keyword=keyword, type=type, file=file)
            except Exception as e:
                response["code"] = 500
                response["msg"] = "服务器出现错误"
        return JsonResponse(response)


def WechatEdit(req, id):
    if req.method == "GET":
        reply_msg = ReplyMsg.objects.get(id=id)
        return render(req, "wechat/wechat-edit.html", locals())
    else:
        response = {"code": 200, "msg": "回复语句修改成功"}
        keyword = req.POST.get("keyword")
        reply_msg = req.POST.get("reply_msg")
        if ReplyMsg.objects.filter(keyword=keyword).exclude(id=id):
            response["code"] = 400
            response["msg"] = "关键词已存在"
        else:
            try:
                with transaction.atomic():
                    ReplyMsg.objects.filter(id=id).update(keyword=keyword, msg=reply_msg)
            except Exception as e:
                response["code"] = 500
                response["msg"] = "服务器出现错误"
        return JsonResponse(response)


def WechatDel(req):
    if req.method == "POST":
        response = {"code": 200, "msg": "自动回复信息删除成功"}
        msg_list = json.loads(req.POST.get("id"))
        if not isinstance(msg_list, list):
            msg_list = [msg_list, ]
        for msg in msg_list:
            if ReplyMsg.objects.filter(id=msg).first():
                try:
                    with transaction.atomic():
                        ReplyMsg.objects.filter(id=msg).delete()
                except Exception as e:
                    response["code"] = 500
                    response["msg"] = "服务器出现错误"
            else:
                response["code"] = 400
                response["msg"] = "此语句已被删除"
        return JsonResponse(response)


def UploadFile(req):
    if req.method == "POST":
        response = {"code": 200, "msg": "上传成功"}
        uploadfile = req.FILES.get("file")
        if not isfile_exist(uploadfile.name):
            with open(os.path.join(UPLOADFILES_DIR, uploadfile.name), "wb") as f:
                for chunk in uploadfile.chunks():
                    f.write(chunk)
            response["filename"] = uploadfile.name
        else:
            response["code"] = 400
            response["msg"] = "文件已存在"
        return JsonResponse(response)


def isfile_exist(filename):
    if os.path.exists(os.path.join(UPLOADFILES_DIR, filename)):
        return True
    else:
        return False
