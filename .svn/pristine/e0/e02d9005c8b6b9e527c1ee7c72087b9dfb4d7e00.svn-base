from django.db import models
from django.utils import timezone


class Chatroom(models.Model):
    id = models.AutoField(primary_key=True)
    nickname = models.CharField(max_length=120, unique=True)
    start_time = models.IntegerField()
    end_time = models.IntegerField()
    remark = models.CharField(max_length=150, null=True)

    def __str__(self):
        return str(self.id)

    class Meta:
        db_table = "wecaht_chatroom_chatroom"


# class Member(models.Model):
#     id = models.AutoField(primary_key=True)
#     nickname = models.CharField(max_length=120, null=False, unique=True)
#
#     def __str__(self):
#         return str(self.id)
#
#     class Meta:
#         db_table = "wechat_memebr_member"


# class MemberToChatroom(models.Model):
#     id = models.AutoField(primary_key=True)
#     chatroom = models.ForeignKey(to="Chatroom", to_field="id")
#     member = models.ForeignKey(to="Member", to_field="id")
#
#     class Meta:
#         unique_together = ("chatroom", "member")
#         db_table = "wecaht_member_to_chatroom"
#
#     def __str__(self):
#         return str(self.id)


class Reply(models.Model):
    type_list = (
        (1, "文字"),
        (2, "图片"),
        (3, "文件"),
    )
    id = models.AutoField(primary_key=True)
    keyword = models.CharField(max_length=255, null=False)
    type = models.IntegerField(null=False, choices=type_list)



    def __str__(self):
        return str(self.id)

    class Meta:
        db_table = "wechat_reply"


class ReplyToChatroom(models.Model):

    id = models.AutoField(primary_key=True)
    reply = models.ForeignKey(to="Reply", to_field="id")
    chatroom = models.ForeignKey(to="Chatroom", to_field="id")
    msg = models.TextField(null=True)
    filename = models.CharField(max_length=255, null=True)
    filepath = models.FileField(upload_to="uploadfile/", null=True)

    class Meta:
        unique_together = (("chatroom", "reply"),)
        db_table = "wechat_reply_to_chatroom"


# class Application(models.Model):
#     id = models.AutoField(primary_key=True)
#     name = models.CharField(max_length=255, null=False)
#     start_time = models.DateTimeField(default=timezone.now())
#     end_time = models.DateTimeField(default=timezone.now())
#     keyword_num = models.IntegerField()
#     applicant = models.CharField(max_length=255, null=False)
#     status = models.BooleanField(default=0)
