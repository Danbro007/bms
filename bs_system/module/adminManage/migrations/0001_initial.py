# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2019-03-11 13:20
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('role', '0001_initial'),
        ('company', '0001_initial'),
        ('department', '0001_initial'),
        ('position', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(default='', max_length=11)),
                ('sex', models.IntegerField(choices=[(1, '男'), (2, '女')], default=1)),
                ('birthday', models.CharField(default='', max_length=64)),
                ('imageid', models.IntegerField(default=1)),
                ('type', models.IntegerField(choices=[(1, '前台用户'), (2, '后台用户')], default=1)),
                ('email', models.CharField(default='', max_length=64)),
                ('add_time', models.DateTimeField(default=datetime.datetime(2019, 3, 11, 13, 20, 6, 44655))),
                ('modify_time', models.DateTimeField(auto_now=True)),
                ('mark', models.BooleanField(default=1)),
                ('level', models.IntegerField(choices=[(1, '高'), (2, '中'), (3, '低')], default=3)),
                ('wechat', models.BooleanField(default=0)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='department.Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='position.Position')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'bs_account_account',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(default=datetime.datetime(2019, 3, 11, 13, 20, 6, 47323))),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='role.Role')),
            ],
            options={
                'db_table': 'bs_account_account_role',
            },
        ),
    ]
